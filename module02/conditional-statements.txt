Інструкція if
Інструкція if дозволяє виконати певний блок коду тільки в тому випадку, якщо задана умова істинна (тобто приймає значення true).
    if (condition) {
    // код, який виконується, якщо умова (condition) істинна
    }


Інструкція if...else
Синтаксис інструкції if можна доповнити блоком else для визначення альтернативних варіантів виконання коду.
    if (condition) {
    // код, який виконується, якщо умова істинна
    } else {
    // код, який виконується, якщо умова хибна
    }


Блок else...if
Конструкція else...if розширює конструкцію if...else і дозволяє перевірити та зреагувати на виконання або невиконання кількох умов. Це корисно, коли ми маємо більше однієї умови.
    if (condition_1) {
    // код, який виконується, якщо умова (condition_1) істинна
    } else if (condition_2) {
    // код, який виконується, якщо умова (condition_2) істинна
    } else if (condition_3) {
    // код, який виконується, якщо умова (condition_3) істинна
    } else {
        // код, який виконується, якщо всі умови хибні
    }


Тернарний оператор
Тернарний оператор — це коротша синтаксична заміна інструкції if...else. Тернарний оператор дозволяє виконувати певну частину коду залежно від умови.
    <condition> ? <expression if condition is true> : <expression if condition is false>


Оператор switch
Оператор switch дозволяє виконувати різні дії залежно від значення виразу.
Використання switch є більш компактним і зручним способом для порівняння виразів з кількома варіантами, ніж інструкції if...else та else...if.
    switch (expression) {
    case value1:
        // код, що виконується, якщо вираз (expression) дорівнює value1
        break;
    case value2:
        // код, що виконується, якщо вираз (expression) дорівнює value2
        break;
    // ...
    default:
        // код, що виконується, якщо вираз (expression) не відповідає жодному значенню
    }


Оператор break
Після виконання коду в одному з випадків потрібно використовувати оператор break, щоб вийти з оператора switch.
Якщо break не вказано, виконання коду продовжиться в наступному case і далі.
Така поведінка називається "провалюванням" (fall-through). Якщо потрібно, щоб кілька блоків case виконували той самий код, можна опустити оператор break між ними.
    const day = 3;

    switch (day) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
        console.log('This is a working day');
        break;
    case 6:
    case 7:
        console.log('It is a day off');
        break;
    default:
        console.log('Invalid');
    }